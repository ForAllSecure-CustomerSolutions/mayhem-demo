name: Mayhem CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_call:
    inputs:
      mayhem_url:
        description: 'Mayhem URL'
        required: true
        default: 'https://app.mayhem.security'
        type: string
      workspace:
        description: 'Mayhem Workspace'
        required: true
        default: 'platform-demo'
        type: string
    secrets:
      mayhem-token:
        description: 'Mayhem Token'
        required: false

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Authenticate with Mayhem
        shell: pwsh
        run: |
          pwd

          if ("${{ secrets.MAYHEM_TOKEN }}" -eq "") {
            Write-Error "Mayhem token not provided"
            exit 1
          }
          # Set the MAYHEM_TOKEN environment variable
          echo "MAYHEM_TOKEN=${{ secrets.MAYHEM_TOKEN }}" | Out-File -FilePath $env:GITHUB_ENV -Append

          # Download and install Mayhem CLI
          Invoke-WebRequest -Uri "https://app.mayhem.security/cli/Windows/mayhem.msi" -OutFile "mayhem.msi"
          Start-Process msiexec.exe -ArgumentList "/i mayhem.msi /quiet /norestart" -Wait

        

          echo "Get-ChildItem -Path C:\Program Files (x86)"
          echo "cd to c"
          cd C:\
          Get-ChildItem -Recurse -File | Where-Object { $_.Name -eq "mayhem.exe" }

      

          # Add Mayhem CLI to PATH for the current process
          $mayhemPath = "C:\Program Files\ForAllSecure\Mayhem\bin"
          [System.Environment]::SetEnvironmentVariable('PATH', "$env:PATH;$mayhemPath", [System.EnvironmentVariableTarget]::Process)

          # Authenticate Mayhem CLI
          mayhem login "${{ inputs.mayhem_url }}" "${{ secrets.MAYHEM_TOKEN }}"
          Write-Host "Mayhem CLI authenticated successfully"

      - name: Set up MSBuild environment and build
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          cd cli
          msbuild geofencing.sln

      - name: Package the executable for Mayhem
        shell: pwsh
        run: |
          $packageDir = "cli/package"
          $exePath = "cli/x64/Debug/geofencing.exe"
          if (-Not (Test-Path $exePath)) {
            Write-Error "Executable not found at $exePath"
            exit 1
          }
          mayhem package $exePath -o $packageDir

          # Ensure the package/testsuite directory exists
          $testSuiteDir = "$packageDir/testsuite"
          if (-Not (Test-Path $testSuiteDir)) {
            New-Item -ItemType Directory -Path $testSuiteDir
          }

          # Copy test files
          if (Test-Path "cli/testsuite") {
            Copy-Item -Path "cli/testsuite/*" -Destination $testSuiteDir -Recurse
          } else {
            Write-Host "No testsuite directory found."
          }

      - name: Run Mayhem
        shell: pwsh
        run: |
          mayhem run cli/package --owner $env:WORKSPACE --project mayhem-demo --target cli
