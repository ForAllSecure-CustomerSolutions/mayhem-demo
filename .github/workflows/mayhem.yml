name: Mayhem CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: lowercase github.repository
      run: echo "REPO_NAME=`echo ${{github.repository}} | tr '[:upper:]' '[:lower:]'`" >>${GITHUB_ENV}
    
    # checkout repository
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Login to docker
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Install Docker Scout
      run: curl -sSfL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh | sh -s --

    - name: Install mdsbom
      run: curl -sSL https://app.mayhem.security/cli/mdsbom/linux/latest/mdsbom.deb -O && sudo dpkg -i mdsbom.deb && sudo usermod -aG mdsbom $USER

    - name: MDSBOM login
      run: mdsbom login https://app.mayhem.security  ${{ secrets.MAYHEM_TOKEN }}

    - name: Set up remote sync of metadata
      run: echo $'\n[sync] \napi_token= "${{ secrets.MAYHEM_TOKEN }}" \nupstream_url="https://app.mayhem.security" \nworkspace="forallsecure-demo"' | sudo tee -a /etc/mdsbom/config.toml

    - name: Restart mdsbom
      run: |
        sudo systemctl restart mdsbom.service
        sudo systemctl status mdsbom.service
        sudo journalctl -xeu mdsbom.service
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push the app images
      run: |
        docker compose pull --ignore-buildable -q
        SHA=${{ github.sha }} docker compose build
        SHA=${{ github.sha }} docker compose push -q

    - name: Bring up the app
      run: | 
        SHA=${{ github.sha }} docker compose up -d --wait
        container_id=$(docker run -q -d ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/car:${{ github.sha }})
        sleep 5
        docker stop $container_id

    - name: Wait for the API to be up
      run: bash -c 'while ! curl -s http://localhost:8000/openapi.json; do sleep 1; done'

    - name: Start Code analysis
      uses: forallsecure/mcode-action@v1
      with:
        mayhem-token: ${{ secrets.MAYHEM_TOKEN }}
        owner: forallsecure-demo
        args: -f car/Mayhemfile --image ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/car:${{ github.sha }}
        sarif-output: code.sarif

    - name: Upload SARIF file(s)
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: code.sarif

    - name: Start API analysis
      uses: forallsecure/mapi-action@v1
      continue-on-error: true
      with:
        mayhem-token: ${{ secrets.MAYHEM_TOKEN }}
        target: forallsecure-demo/gps-telemetry/api
        api-url: http://localhost:8000
        api-spec: http://localhost:8000/openapi.json
        sarif-report: api.sarif
        run-args: --experimental-rules
        sarif-output: sarif

    - name: Upload SARIF file(s)
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: api.sarif

    - name: Bring down the app
      run: SHA=${{ github.sha }} docker compose down

    - name: Run Dynamic SBOM scan
      run: | 
        mdsbom scout ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/car:${{ github.sha }} --sca-report-out dsbom.sarif --sca-summary-csv dsbom.json --local
        mdsbom scout ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/api:${{ github.sha }} --sca-report-out dsbom.sarif --sca-summary-csv dsbom.json --local
        mdsbom scout forallsecuredevbot/redis:latest --sca-report-out dsbom.sarif --sca-summary-csv dsbom.json --local

    # run the following whtn the dsbom.sarif file is generated
    - name: Patch docker scout SARIF report for CodeQL
      run : |
        if [ -f dsbom.sarif ]; then jq 'walk(if type == "object" and has("startLine") and .startLine == 0 then .startLine = 1 else . end |
            if type == "object" and has("endLine") and .endLine == 0 then .endLine = 1 else . end |
            if type == "object" and has("endColumn") and .endColumn == 0 then .endColumn = 1 else . end |
            if type == "object" and has("startColumn") and .startColumn == 0 then .startColumn = 1 else . end)' dsbom.sarif > dsbom-patched.sarif; fi
        touch dsbom-patched.sarif

    - name: Upload SARIF file(s)
      uses: actions/upload-artifact@v2
      with:
        name: dsbom-patched-sarif
        path: dsbom-patched.sarif

    - name: Upload SARIF file(s)
      id: upload
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: dsbom-patched.sarif

    - name: Dismiss issues that were not observed at runtime
      uses: advanced-security/dismiss-alerts@v1
      with:
        # specify a 'sarif-id' and 'sarif-file'
        sarif-id: ${{ steps.upload.outputs.sarif-id }}
        sarif-file: dsbom-patched.sarif
      env:
        GITHUB_TOKEN: ${{ github.token }}
